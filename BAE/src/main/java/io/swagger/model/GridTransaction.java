/*
 * Boardwalk Cuboid Services
 * Boardwalk Rest API
 *
 * OpenAPI spec version: 1.0.2
 * Contact: apisupport@boardwalltech.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.math.BigDecimal;
import javax.validation.constraints.*;

/**
 * GridTransaction
 */

public class GridTransaction   {
  @JsonProperty("id")
  private Integer id = null;

  @JsonProperty("updatedBy")
  private String updatedBy = null;

  @JsonProperty("transactionTime")
  private BigDecimal transactionTime = null;

  @JsonProperty("comment")
  private String comment = null;

  @JsonProperty("rowAdded")
  private Boolean rowAdded = null;

  @JsonProperty("rowDeleted")
  private Boolean rowDeleted = null;

  @JsonProperty("columnAdded")
  private Boolean columnAdded = null;

  @JsonProperty("cellUpdated")
  private Boolean cellUpdated = null;

  @JsonProperty("formulaUpdated")
  private Boolean formulaUpdated = null;

  @JsonProperty("blnAdded")
  private Boolean blnAdded = null;

  @JsonProperty("createdOnTime")
  private String createdOnTime = null;

  public GridTransaction id(Integer id) {
    this.id = id;
    return this;
  }

  /**
   * Get id
   * @return id
   **/
  @JsonProperty("id")
  @ApiModelProperty(value = "")
  public Integer getId() {
    return id;
  }

  public void setId(Integer id) {
    this.id = id;
  }

  public GridTransaction updatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
    return this;
  }

  /**
   * Get updatedBy
   * @return updatedBy
   **/
  @JsonProperty("updatedBy")
  @ApiModelProperty(value = "")
  public String getUpdatedBy() {
    return updatedBy;
  }

  public void setUpdatedBy(String updatedBy) {
    this.updatedBy = updatedBy;
  }

  public GridTransaction transactionTime(BigDecimal transactionTime) {
    this.transactionTime = transactionTime;
    return this;
  }

  /**
   * Get transactionTime
   * @return transactionTime
   **/
  @JsonProperty("transactionTime")
  @ApiModelProperty(value = "")
  public BigDecimal getTransactionTime() {
    return transactionTime;
  }

  public void setTransactionTime(BigDecimal transactionTime) {
    this.transactionTime = transactionTime;
  }

  public GridTransaction comment(String comment) {
    this.comment = comment;
    return this;
  }

  /**
   * Get comment
   * @return comment
   **/
  @JsonProperty("comment")
  @ApiModelProperty(value = "")
  public String getComment() {
    return comment;
  }

  public void setComment(String comment) {
    this.comment = comment;
  }

  public GridTransaction rowAdded(Boolean rowAdded) {
    this.rowAdded = rowAdded;
    return this;
  }

  /**
   * Get rowAdded
   * @return rowAdded
   **/
  @JsonProperty("rowAdded")
  @ApiModelProperty(value = "")
  public Boolean isRowAdded() {
    return rowAdded;
  }

  public void setRowAdded(Boolean rowAdded) {
    this.rowAdded = rowAdded;
  }

  public GridTransaction rowDeleted(Boolean rowDeleted) {
    this.rowDeleted = rowDeleted;
    return this;
  }

  /**
   * Get rowDeleted
   * @return rowDeleted
   **/
  @JsonProperty("rowDeleted")
  @ApiModelProperty(value = "")
  public Boolean isRowDeleted() {
    return rowDeleted;
  }

  public void setRowDeleted(Boolean rowDeleted) {
    this.rowDeleted = rowDeleted;
  }

  public GridTransaction columnAdded(Boolean columnAdded) {
    this.columnAdded = columnAdded;
    return this;
  }

  /**
   * Get columnAdded
   * @return columnAdded
   **/
  @JsonProperty("columnAdded")
  @ApiModelProperty(value = "")
  public Boolean isColumnAdded() {
    return columnAdded;
  }

  public void setColumnAdded(Boolean columnAdded) {
    this.columnAdded = columnAdded;
  }

  public GridTransaction cellUpdated(Boolean cellUpdated) {
    this.cellUpdated = cellUpdated;
    return this;
  }

  /**
   * Get cellUpdated
   * @return cellUpdated
   **/
  @JsonProperty("cellUpdated")
  @ApiModelProperty(value = "")
  public Boolean isCellUpdated() {
    return cellUpdated;
  }

  public void setCellUpdated(Boolean cellUpdated) {
    this.cellUpdated = cellUpdated;
  }

  public GridTransaction formulaUpdated(Boolean formulaUpdated) {
    this.formulaUpdated = formulaUpdated;
    return this;
  }

  /**
   * Get formulaUpdated
   * @return formulaUpdated
   **/
  @JsonProperty("formulaUpdated")
  @ApiModelProperty(value = "")
  public Boolean isFormulaUpdated() {
    return formulaUpdated;
  }

  public void setFormulaUpdated(Boolean formulaUpdated) {
    this.formulaUpdated = formulaUpdated;
  }

  public GridTransaction blnAdded(Boolean blnAdded) {
    this.blnAdded = blnAdded;
    return this;
  }

  /**
   * Get blnAdded
   * @return blnAdded
   **/
  @JsonProperty("blnAdded")
  @ApiModelProperty(value = "")
  public Boolean isBlnAdded() {
    return blnAdded;
  }

  public void setBlnAdded(Boolean blnAdded) {
    this.blnAdded = blnAdded;
  }

  public GridTransaction createdOnTime(String createdOnTime) {
    this.createdOnTime = createdOnTime;
    return this;
  }

  /**
   * Get createdOnTime
   * @return createdOnTime
   **/
  @JsonProperty("createdOnTime")
  @ApiModelProperty(value = "")
  public String getCreatedOnTime() {
    return createdOnTime;
  }

  public void setCreatedOnTime(String createdOnTime) {
    this.createdOnTime = createdOnTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GridTransaction gridTransaction = (GridTransaction) o;
    return Objects.equals(this.id, gridTransaction.id) &&
        Objects.equals(this.updatedBy, gridTransaction.updatedBy) &&
        Objects.equals(this.transactionTime, gridTransaction.transactionTime) &&
        Objects.equals(this.comment, gridTransaction.comment) &&
        Objects.equals(this.rowAdded, gridTransaction.rowAdded) &&
        Objects.equals(this.rowDeleted, gridTransaction.rowDeleted) &&
        Objects.equals(this.columnAdded, gridTransaction.columnAdded) &&
        Objects.equals(this.cellUpdated, gridTransaction.cellUpdated) &&
        Objects.equals(this.formulaUpdated, gridTransaction.formulaUpdated) &&
        Objects.equals(this.blnAdded, gridTransaction.blnAdded) &&
        Objects.equals(this.createdOnTime, gridTransaction.createdOnTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, updatedBy, transactionTime, comment, rowAdded, rowDeleted, columnAdded, cellUpdated, formulaUpdated, blnAdded, createdOnTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GridTransaction {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    updatedBy: ").append(toIndentedString(updatedBy)).append("\n");
    sb.append("    transactionTime: ").append(toIndentedString(transactionTime)).append("\n");
    sb.append("    comment: ").append(toIndentedString(comment)).append("\n");
    sb.append("    rowAdded: ").append(toIndentedString(rowAdded)).append("\n");
    sb.append("    rowDeleted: ").append(toIndentedString(rowDeleted)).append("\n");
    sb.append("    columnAdded: ").append(toIndentedString(columnAdded)).append("\n");
    sb.append("    cellUpdated: ").append(toIndentedString(cellUpdated)).append("\n");
    sb.append("    formulaUpdated: ").append(toIndentedString(formulaUpdated)).append("\n");
    sb.append("    blnAdded: ").append(toIndentedString(blnAdded)).append("\n");
    sb.append("    createdOnTime: ").append(toIndentedString(createdOnTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

