/*
 * Boardwalk Cuboid Services
 * Boardwalk Rest API
 *
 * OpenAPI spec version: 1.0.2
 * Contact: apisupport@boardwalltech.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.model;

import java.util.Objects;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.model.CellChain;
import io.swagger.model.ColumnChain;
import io.swagger.model.FormulaValue;
import io.swagger.model.RowChain;
import io.swagger.model.Transaction;
import java.util.ArrayList;
import java.util.List;
import javax.validation.constraints.*;

import com.fasterxml.jackson.annotation.JsonInclude;

@JsonInclude(JsonInclude.Include.NON_EMPTY)

/**
 * GridChain
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaJerseyServerCodegen", date = "2018-09-18T12:35:03.779Z")
public class GridChain   {
  @JsonProperty("creatorName")
  private String creatorName = null;

  @JsonProperty("creatorId")
  private Integer creatorId = null;

  @JsonProperty("creationTxId")
  private Integer creationTxId = null;

  @JsonProperty("collabId")
  private Integer collabId = null;

  @JsonProperty("wbId")
  private Integer wbId = null;

  @JsonProperty("gridRows")
  private List<RowChain> gridRows = null;

  @JsonProperty("gridColumns")
  private List<ColumnChain> gridColumns = null;

  @JsonProperty("gridCells")
  private List<CellChain> gridCells = null;

  @JsonProperty("gridTransactions")
  private List<Transaction> gridTransactions = null;

  @JsonProperty("gridFormulas")
  private List<FormulaValue> gridFormulas = null;

  public GridChain creatorName(String creatorName) {
    this.creatorName = creatorName;
    return this;
  }

  /**
   * Get creatorName
   * @return creatorName
   **/
  @JsonProperty("creatorName")
  @ApiModelProperty(value = "")
  public String getCreatorName() {
    return creatorName;
  }

  public void setCreatorName(String creatorName) {
    this.creatorName = creatorName;
  }

  public GridChain creatorId(Integer creatorId) {
    this.creatorId = creatorId;
    return this;
  }

  /**
   * Get creatorId
   * @return creatorId
   **/
  @JsonProperty("creatorId")
  @ApiModelProperty(value = "")
  public Integer getCreatorId() {
    return creatorId;
  }

  public void setCreatorId(Integer creatorId) {
    this.creatorId = creatorId;
  }

  public GridChain creationTxId(Integer creationTxId) {
    this.creationTxId = creationTxId;
    return this;
  }

  /**
   * Get creationTxId
   * @return creationTxId
   **/
  @JsonProperty("creationTxId")
  @ApiModelProperty(value = "")
  public Integer getCreationTxId() {
    return creationTxId;
  }

  public void setCreationTxId(Integer creationTxId) {
    this.creationTxId = creationTxId;
  }

  public GridChain collabId(Integer collabId) {
    this.collabId = collabId;
    return this;
  }

  /**
   * Get collabId
   * @return collabId
   **/
  @JsonProperty("collabId")
  @ApiModelProperty(value = "")
  public Integer getCollabId() {
    return collabId;
  }

  public void setCollabId(Integer collabId) {
    this.collabId = collabId;
  }

  public GridChain wbId(Integer wbId) {
    this.wbId = wbId;
    return this;
  }

  /**
   * Get wbId
   * @return wbId
   **/
  @JsonProperty("wbId")
  @ApiModelProperty(value = "")
  public Integer getWbId() {
    return wbId;
  }

  public void setWbId(Integer wbId) {
    this.wbId = wbId;
  }

  public GridChain gridRows(List<RowChain> gridRows) {
    this.gridRows = gridRows;
    return this;
  }

  public GridChain addGridRowsItem(RowChain gridRowsItem) {
    if (this.gridRows == null) {
      this.gridRows = new ArrayList<RowChain>();
    }
    this.gridRows.add(gridRowsItem);
    return this;
  }

  /**
   * Get gridRows
   * @return gridRows
   **/
  @JsonProperty("gridRows")
  @ApiModelProperty(value = "")
  public List<RowChain> getGridRows() {
    return gridRows;
  }

  public void setGridRows(List<RowChain> gridRows) {
    this.gridRows = gridRows;
  }

  public GridChain gridColumns(List<ColumnChain> gridColumns) {
    this.gridColumns = gridColumns;
    return this;
  }

  public GridChain addGridColumnsItem(ColumnChain gridColumnsItem) {
    if (this.gridColumns == null) {
      this.gridColumns = new ArrayList<ColumnChain>();
    }
    this.gridColumns.add(gridColumnsItem);
    return this;
  }

  /**
   * Get gridColumns
   * @return gridColumns
   **/
  @JsonProperty("gridColumns")
  @ApiModelProperty(value = "")
  public List<ColumnChain> getGridColumns() {
    return gridColumns;
  }

  public void setGridColumns(List<ColumnChain> gridColumns) {
    this.gridColumns = gridColumns;
  }

  public GridChain gridCells(List<CellChain> gridCells) {
    this.gridCells = gridCells;
    return this;
  }

  public GridChain addGridCellsItem(CellChain gridCellsItem) {
    if (this.gridCells == null) {
      this.gridCells = new ArrayList<CellChain>();
    }
    this.gridCells.add(gridCellsItem);
    return this;
  }

  /**
   * Get gridCells
   * @return gridCells
   **/
  @JsonProperty("gridCells")
  @ApiModelProperty(value = "")
  public List<CellChain> getGridCells() {
    return gridCells;
  }

  public void setGridCells(List<CellChain> gridCells) {
    this.gridCells = gridCells;
  }

  public GridChain gridTransactions(List<Transaction> gridTransactions) {
    this.gridTransactions = gridTransactions;
    return this;
  }

  public GridChain addGridTransactionsItem(Transaction gridTransactionsItem) {
    if (this.gridTransactions == null) {
      this.gridTransactions = new ArrayList<Transaction>();
    }
    this.gridTransactions.add(gridTransactionsItem);
    return this;
  }

  /**
   * Get gridTransactions
   * @return gridTransactions
   **/
  @JsonProperty("gridTransactions")
  @ApiModelProperty(value = "")
  public List<Transaction> getGridTransactions() {
    return gridTransactions;
  }

  public void setGridTransactions(List<Transaction> gridTransactions) {
    this.gridTransactions = gridTransactions;
  }

  public GridChain gridFormulas(List<FormulaValue> gridFormulas) {
    this.gridFormulas = gridFormulas;
    return this;
  }

  public GridChain addGridFormulasItem(FormulaValue gridFormulasItem) {
    if (this.gridFormulas == null) {
      this.gridFormulas = new ArrayList<FormulaValue>();
    }
    this.gridFormulas.add(gridFormulasItem);
    return this;
  }

  /**
   * Get gridFormulas
   * @return gridFormulas
   **/
  @JsonProperty("gridFormulas")
  @ApiModelProperty(value = "")
  public List<FormulaValue> getGridFormulas() {
    return gridFormulas;
  }

  public void setGridFormulas(List<FormulaValue> gridFormulas) {
    this.gridFormulas = gridFormulas;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GridChain gridChain = (GridChain) o;
    return Objects.equals(this.creatorName, gridChain.creatorName) &&
        Objects.equals(this.creatorId, gridChain.creatorId) &&
        Objects.equals(this.creationTxId, gridChain.creationTxId) &&
        Objects.equals(this.collabId, gridChain.collabId) &&
        Objects.equals(this.wbId, gridChain.wbId) &&
        Objects.equals(this.gridRows, gridChain.gridRows) &&
        Objects.equals(this.gridColumns, gridChain.gridColumns) &&
        Objects.equals(this.gridCells, gridChain.gridCells) &&
        Objects.equals(this.gridTransactions, gridChain.gridTransactions) &&
        Objects.equals(this.gridFormulas, gridChain.gridFormulas);
  }

  @Override
  public int hashCode() {
    return Objects.hash(creatorName, creatorId, creationTxId, collabId, wbId, gridRows, gridColumns, gridCells, gridTransactions, gridFormulas);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GridChain {\n");
    
    sb.append("    creatorName: ").append(toIndentedString(creatorName)).append("\n");
    sb.append("    creatorId: ").append(toIndentedString(creatorId)).append("\n");
    sb.append("    creationTxId: ").append(toIndentedString(creationTxId)).append("\n");
    sb.append("    collabId: ").append(toIndentedString(collabId)).append("\n");
    sb.append("    wbId: ").append(toIndentedString(wbId)).append("\n");
    sb.append("    gridRows: ").append(toIndentedString(gridRows)).append("\n");
    sb.append("    gridColumns: ").append(toIndentedString(gridColumns)).append("\n");
    sb.append("    gridCells: ").append(toIndentedString(gridCells)).append("\n");
    sb.append("    gridTransactions: ").append(toIndentedString(gridTransactions)).append("\n");
    sb.append("    gridFormulas: ").append(toIndentedString(gridFormulas)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }
}

